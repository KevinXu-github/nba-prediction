{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rt\\\\nba-parlay-predictor\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\n// Components\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Dashboard from './pages/Dashboard';\nimport ParlayGenerator from './pages/ParlayGenerator';\nimport ParlayHistory from './pages/ParlayHistory';\nimport GamesList from './pages/GamesList';\nimport About from './pages/About';\n\n// API service\nimport api from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [upcomingGames, setUpcomingGames] = useState([]);\n\n  // Load upcoming games on startup\n  useEffect(() => {\n    fetchUpcomingGames();\n  }, []);\n\n  // Function to fetch upcoming games\n  const fetchUpcomingGames = async () => {\n    setLoading(true);\n    try {\n      const games = await api.getUpcomingGames();\n      setUpcomingGames(games);\n    } catch (error) {\n      console.error('Error fetching upcoming games:', error);\n      toast.error('Failed to load upcoming games');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to generate parlay\n  const generateParlay = async (parlaySize, minConfidence) => {\n    setLoading(true);\n    try {\n      const parlay = await api.predictParlay(parlaySize, minConfidence);\n      return parlay;\n    } catch (error) {\n      console.error('Error generating parlay:', error);\n      toast.error(error.message || 'Failed to generate parlay');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to refresh data\n  const refreshData = async () => {\n    try {\n      await api.refreshData();\n      toast.info('Data refresh scheduled');\n      // Fetch updated games\n      fetchUpcomingGames();\n    } catch (error) {\n      console.error('Error refreshing data:', error);\n      toast.error('Failed to refresh data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 3000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        onRefreshData: refreshData,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-6\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {\n              games: upcomingGames,\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/generate-parlay\",\n            element: /*#__PURE__*/_jsxDEV(ParlayGenerator, {\n              onGenerateParlay: generateParlay,\n              games: upcomingGames,\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/history\",\n            element: /*#__PURE__*/_jsxDEV(ParlayHistory, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/games\",\n            element: /*#__PURE__*/_jsxDEV(GamesList, {\n              games: upcomingGames,\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tY9Bx3ekK4+YZIFcLHPG5VOmIis=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","ToastContainer","toast","Header","Footer","Dashboard","ParlayGenerator","ParlayHistory","GamesList","About","api","jsxDEV","_jsxDEV","App","_s","loading","setLoading","upcomingGames","setUpcomingGames","fetchUpcomingGames","games","getUpcomingGames","error","console","generateParlay","parlaySize","minConfidence","parlay","predictParlay","message","refreshData","info","children","className","position","autoClose","fileName","_jsxFileName","lineNumber","columnNumber","onRefreshData","path","element","onGenerateParlay","_c","$RefreshReg$"],"sources":["C:/Users/rt/nba-parlay-predictor/frontend/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\n\r\n// Components\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Dashboard from './pages/Dashboard';\r\nimport ParlayGenerator from './pages/ParlayGenerator';\r\nimport ParlayHistory from './pages/ParlayHistory';\r\nimport GamesList from './pages/GamesList';\r\nimport About from './pages/About';\r\n\r\n// API service\r\nimport api from './services/api';\r\n\r\nfunction App() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [upcomingGames, setUpcomingGames] = useState([]);\r\n\r\n  // Load upcoming games on startup\r\n  useEffect(() => {\r\n    fetchUpcomingGames();\r\n  }, []);\r\n\r\n  // Function to fetch upcoming games\r\n  const fetchUpcomingGames = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const games = await api.getUpcomingGames();\r\n      setUpcomingGames(games);\r\n    } catch (error) {\r\n      console.error('Error fetching upcoming games:', error);\r\n      toast.error('Failed to load upcoming games');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to generate parlay\r\n  const generateParlay = async (parlaySize, minConfidence) => {\r\n    setLoading(true);\r\n    try {\r\n      const parlay = await api.predictParlay(parlaySize, minConfidence);\r\n      return parlay;\r\n    } catch (error) {\r\n      console.error('Error generating parlay:', error);\r\n      toast.error(error.message || 'Failed to generate parlay');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to refresh data\r\n  const refreshData = async () => {\r\n    try {\r\n      await api.refreshData();\r\n      toast.info('Data refresh scheduled');\r\n      // Fetch updated games\r\n      fetchUpcomingGames();\r\n    } catch (error) {\r\n      console.error('Error refreshing data:', error);\r\n      toast.error('Failed to refresh data');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <ToastContainer position=\"top-right\" autoClose={3000} />\r\n        <Header onRefreshData={refreshData} loading={loading} />\r\n        \r\n        <div className=\"container mx-auto px-4 py-6\">\r\n          <Routes>\r\n            <Route path=\"/\" element={<Dashboard games={upcomingGames} loading={loading} />} />\r\n            <Route \r\n              path=\"/generate-parlay\" \r\n              element={\r\n                <ParlayGenerator \r\n                  onGenerateParlay={generateParlay} \r\n                  games={upcomingGames}\r\n                  loading={loading} \r\n                />\r\n              } \r\n            />\r\n            <Route path=\"/history\" element={<ParlayHistory />} />\r\n            <Route path=\"/games\" element={<GamesList games={upcomingGames} loading={loading} />} />\r\n            <Route path=\"/about\" element={<About />} />\r\n          </Routes>\r\n        </div>\r\n        \r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}